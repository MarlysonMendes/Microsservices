name: dockercompose17194347003662828503
services:
  basket.api:
    build:
      context: C:\Users\marly\OneDrive\Ãrea de Trabalho\Projetos .Net\Microsservices
      dockerfile: Basket.API/Dockerfile
    container_name: basket.api
    depends_on:
      basketdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CacheSettings:ConnectionString: basketdb:6379
    image: basketapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "8001"
      protocol: tcp
  basketdb:
    container_name: basketdb
    image: redis:alpine
    networks:
      default: null
    ports:
    - mode: ingress
      target: 6379
      published: "6379"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: mongo_data
      target: /data/db
      volume: {}
  catalog.api:
    build:
      context: C:\Users\marly\OneDrive\Ãrea de Trabalho\Projetos .Net\Microsservices
      dockerfile: Catalog.API/Dockerfile
    container_name: catalog.api
    depends_on:
      catalogdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionString: mongodb://catalogdb:27017
    image: catalogapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "8000"
      protocol: tcp
  catalogdb:
    container_name: catalogdb
    image: mongo
    networks:
      default: null
    ports:
    - mode: ingress
      target: 27017
      published: "27017"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: mongo_data
      target: /data/db
      volume: {}
  discount.api:
    build:
      context: C:\Users\marly\OneDrive\Ãrea de Trabalho\Projetos .Net\Microsservices
      dockerfile: Discount.Api/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: discountapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\marly\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\marly\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  discountdb:
    image: postgres
    networks:
      default: null
  pgadmin:
    image: dpage/pgadmin4
    networks:
      default: null
networks:
  default:
    name: dockercompose17194347003662828503_default
volumes:
  mongo_data:
    name: dockercompose17194347003662828503_mongo_data